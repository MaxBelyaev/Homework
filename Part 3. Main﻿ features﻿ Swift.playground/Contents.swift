import UIKit


//: 13.–û–ø–µ—Ä–∞—Ç–æ—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

//: 13.1 –£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
//–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∫–∏ –≤ Playground 
//–õ–∏—Å—Ç–∏–Ω–≥ 13.1
let strName = "–î—Ä–∞–∫–æ–Ω"
let strYoung = "–º–æ–ª–æ–¥"
let strOld = "—Å—Ç–∞—Ä"
let strEmpty = " "
var dragonAge = 230
assert( dragonAge <= 235, strName+strEmpty+strOld )
assert( dragonAge >= 225, strName+strEmpty+strYoung )
print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∞ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É")

//: 13.2 –û–ø–µ—Ä–∞—Ç–æ—Ä —É—Å–ª–æ–≤–∏—è if

//–°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
//–õ–∏—Å—Ç–∏–Ω–≥ 13.6
var logicVar = false
// –ø–æ–ª–Ω–∞—è —Ñ–æ—Ä–º–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ
if logicVar == false {
    print("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è logicVar –ª–æ–∂–Ω–∞")
}
// —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ
if !logicVar {
    print("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è logicVar –≤–Ω–æ–≤—å –ª–æ–∂–Ω–∞")
}


//–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ if

//–õ–∏—Å—Ç–∏–Ω–≥ 13.7
// –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∏–ø–∞ Bool
var logicVar1 = false
// –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
if logicVar1 {
    print("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è logicVar –∏—Å—Ç–∏–Ω–Ω–∞")
} else {
    print("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è logicVar –ª–æ–∂–Ω–∞")
}

//List 13.8
//–ú–æ–∂–Ω–æ —é–∑–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã || –∏ &&
var su = 200
var ka = 420
if su+ka == 420 {
    print("420 üëç")
} else {
    print("PROEBAL")
}

//–õ–∏—Å—Ç–∏–Ω–≥ 13.10–∞
var firstLogicVar = true
var secondLogicVar = false
if firstLogicVar && secondLogicVar {
    print("–û–±–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏—Å—Ç–∏–Ω–Ω—ã")
} else {
if firstLogicVar || secondLogicVar {
        print("–¢–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏—Å—Ç–∏–Ω–Ω–∞ ")
    }else{
        print("–û–±–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–æ–∂–Ω—ã")
    }
}

//–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–πÔªø —Å–∏–Ω—Ç–∞–∫—Å–∏—ÅÔªø –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞Ôªø if

//–õ–∏—Å—Ç–∏–Ω–≥ 13.11
// –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if firstLogicVar && secondLogicVar {
    print("–û–±–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏—Å—Ç–∏–Ω–Ω—ã")
} else if firstLogicVar || secondLogicVar {
    print("–û–¥–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏—Å—Ç–∏–Ω–Ω–∞")
} else {
    print("–û–±–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–æ–∂–Ω—ã")
}

//–õ–∏—Å—Ç–∏–Ω–≥ 13.13
// –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–ª—å—Ü–æ–≤ –≤ –¥–æ–º–µ
var tenantCount = 6
// —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞
var rentPrice = 0
/* –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ –æ–¥–Ω–æ–≥–æ
—á–µ–ª–æ–≤–µ–∫–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º */
if tenantCount < 5 {
    rentPrice = 1000
} else if tenantCount >= 5 && tenantCount <= 7 {
    rentPrice = 800
} else {
    rentPrice = 500
}
// –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–π —Å—É–º–º—ã —Å—Ä–µ–¥—Å—Ç–≤
var allPrice = rentPrice * tenantCount

//–õ–∏—Å—Ç–∏–Ω–≥ 13.13–∞
/*–¥–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ contains(_:) –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å,
 –ø–æ–ø–∞–¥–∞–µ—Ç –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ç—Ä–µ–±—É–µ–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω */
if (..<5).contains(tenantCount) {
    rentPrice = 1000
} else if (5...7).contains(tenantCount) {
    rentPrice = 800
} else if (8...).contains(tenantCount) {
    rentPrice = 500
}

//–¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —É—Å–ª–æ–≤–∏—è

//–õ–∏—Å—Ç–∏–Ω–≥ 13.14
let a = 1
let b = 2
// —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∫–æ–Ω—Å—Ç–∞–Ω—Ç
a <= b ? print("A –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ B") : print("A –±–æ–ª—å—à–µ B")

// –õ–∏—Å—Ç–∏–Ω–≥ 13.15
/* –¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —É—Å–ª–æ–≤–∏—è –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å
–∑–∞–¥–∞–Ω–Ω—ã–µ –µ–º—É –≤–∞—Ä–∏–∞–Ω—Ç—ã (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π)*/
// –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∏–ø–∞ Int
var height = 180
// –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∏–ø–∞ Bool
var isHeader = true
// –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
let rowHeight = height + (isHeader ? 20 : 10 )

//: 13.3 –û–ø–µ—Ä–∞—Ç–æ—Ä –≤–µ—Ç–≤–ª–µ–Ω–∏—è Switch

//–õ–∏—Å—Ç–∏–Ω–≥ 13.17
var userMark = 2
// –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
var message = ""
switch userMark {
case 1, 2:
    message = "–¢—ã –ø—Ä–æ–µ–±–∞–ª, –∫–∞—Å–∞—Ç–∏–∫!"
case 3:
    message = "–¢—ã –ø–ª–æ—Ö–æ —É—á–∏–ª –º–∞—Ç–µ—Ä–∏–∞–ª –≤ —ç—Ç–æ–º –≥–æ–¥—É!"
case 4:
    message = "–ù–µ–ø–ª–æ—Ö–æ, –Ω–æ –º–æ–≥–ª–æ –±—ã—Ç—å –∏ –ª—É—á—à–µ"
case 5:
    message = "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ —Ç–µ–±–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–æ!"
default:
    message = "–ü–µ—Ä–µ–¥–∞–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–± –æ—Ü–µ–Ω–∫–µ"
}
// –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ–Ω—Å–æ–ª—å
print(message)

//–î–∏–∞–ø–∞–∑–æ–Ω—ã –≤ –æ–ø–µ—Ä–∞—Ç–æ—Ä–µ switch

//–õ–∏—Å—Ç–∏–Ω–≥ 13.18
userMark = 4
switch userMark {
case 1..<3:
    print("–≠–∫–∑–∞–º–µ–Ω –Ω–µ —Å–¥–∞–Ω")
case 3:
    print("–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ—à–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è")
case 4...5:
    print("–≠–∫–∑–∞–º–µ–Ω —Å–¥–∞–Ω")
default:
    assert( false, "–£–∫–∞–∑–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ—Ü–µ–Ω–∫–∞")
}
//–° –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–¥–∞—á–∏ –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ false —Ñ—É–Ω–∫—Ü–∏—è assert(_:_:)
//–ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞.


//–ö–æ—Ä—Ç–µ–∂–∏ –≤ –æ–ø–µ—Ä—Ç–æ—Ä–µ switch

//–õ–∏—Å—Ç–∏–Ω–≥ 13.19
var answer: (code: Int, message: String) = (code: 404, message: "Page not found")
                                            
//–õ–∏—Å—Ç–∏–Ω–≥ 13.20
//switch answer {
//case (100..<400, _):
//    print( answer.message )
//case (400..<500, _):
//    assert( false, answer.message )
//default:
//    print( "–ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç" )
//}

//–õ–∏—Å—Ç–∏–Ω–≥ 13.23
var dragonCharacteristics: (color: String, weight: Float) = ("–∫—Ä–∞—Å–Ω—ã–π", 1.4)
var dragonsCount = 3

switch dragonCharacteristics {
case ("–∑–µ–ª–µ–Ω—ã–π", 0..<2 ):
    print("–í–æ–ª—å–µ—Ä No 1")
case ("–∫—Ä–∞—Å–Ω—ã–π", 0..<2 ):
    print("–í–æ–ª—å–µ—Ä No 2")
case ("–∑–µ–ª–µ–Ω—ã–π", 2...) where dragonCharacteristics.weight.truncatingRemainder(dividingBy: 1) == 0 && dragonsCount < 5,
     ("–∫—Ä–∞—Å–Ω—ã–π", 2...) where dragonCharacteristics.weight.truncatingRemainder(dividingBy: 1) == 0 && dragonsCount < 5:
    print("–í–æ–ª—å–µ—Ä No 3")
default:
    print("–î—Ä–∞–∫–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–Ω—è—Ç –≤ —Å—Ç–∞—é")
}
//–í—ã—Ä–∞–∂–µ–Ω–∏–µ dragonCharacteristics.weight.truncatingRemainder (dividingBy: 1) == 0
//–ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –¥–µ–ª–∏—Ç—Å—è –ª–∏ –≤–µ—Å –¥—Ä–∞–∫–æ–Ω–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –∫–æ—Ä—Ç–µ–∂–µ, –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É.

//–°–≤—è–∑—ã–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π

//–õ–∏—Å—Ç–∏–Ω–≥ 13.25–∞
switch dragonCharacteristics {
case ("–∑–µ–ª–µ–Ω—ã–π", 0..<2 ):
    print("–í–æ–ª—å–µ—Ä No 1")
case ("–∫—Ä–∞—Å–Ω—ã–π", 0..<2 ):
    print("–í–æ–ª—å–µ—Ä No 2")
case let (color, weight) where
    (color == "–∑–µ–ª–µ–Ω—ã–π" || color == "–∫—Ä–∞—Å–Ω—ã–π")
    && weight.truncatingRemainder(dividingBy: 1) == 0
    && dragonsCount < 5:
print("–í–æ–ª—å–µ—Ä No 3. –í–µ—Å –¥—Ä–∞–∫–æ–Ω–∞ \(weight) —Ç–æ–Ω–Ω—ã")
default:
    print("–î—Ä–∞–∫–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–Ω—è—Ç –≤ —Å—Ç–∞—é")
}

//O–ø–µ—Ä–∞—Ç–æ—ÄÔªø breakÔªø –≤Ôªø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏Ôªø switch-case

//–õ–∏—Å—Ç–∏–Ω–≥ 13.26
var someInt = 12
switch someInt {
case 1...:
    print( "–ë–æ–ª—å—à–µ 0" )
case ..<0:
    print( "–ú–µ–Ω—å—à–µ 0" )
default:
break }

//–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ fallthrough

//–õ–∏—Å—Ç–∏–Ω–≥ 13.27
var level: Character = "–ë"
// –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
switch level {
    case "–ê":
        print("–í—ã–∫–ª—é—á–∏—Ç—å –≤—Å–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–±–æ—Ä—ã ")
        fallthrough
    case "–ë":
        print("–ó–∞–∫—Ä—ã—Ç—å –≤—Ö–æ–¥–Ω—ã–µ –¥–≤–µ—Ä–∏ –∏ –æ–∫–Ω–∞ ")
        fallthrough
    case "–í":
        print("–°–æ–±–ª—é–¥–∞—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ")
    default:
        break
}

//: 13.4.Ôªø –û–ø–µ—Ä–∞—Ç–æ—Ä—ãÔªø –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—èÔªø whileÔªø –∏Ôªø repeatÔªø while
//–û–ø–µ—Ä–∞—Ç–æ—Ä while

//–õ–∏—Å—Ç–∏–Ω–≥ 13.28
// –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
var i = 1
// —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–ª–æ–∂–µ–Ω–∏—è
var resultSum = 0
// —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—É–º–º—ã
while i <= 10 {
    resultSum += i
i += 1 }
resultSum

//–û–ø–µ—Ä–∞—Ç–æ—ÄÔªø repeatÔªø while

//–õ–∏—Å—Ç–∏–Ω–≥ 13.29
// –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
var y = 1
// —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–ª–æ–∂–µ–Ω–∏—è
var result = 0
// —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—É–º–º—ã
repeat{
result += y
    y += 1
} while y <= 10
result

//: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ continue

//–õ–∏—Å—Ç–∏–Ω–≥ 13.30
//–ö–æ–¥ –≤ –ª–∏—Å—Ç–∏–Ω–≥–µ 13.30 –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Å–ª–æ–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ –æ—Ç 1 –¥–æ 10.
//–î–ª—è —ç—Ç–æ–≥–æ –≤ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å (–ø–æ –∑–Ω–∞—á–µ–Ω–∏—é –æ—Å—Ç–∞—Ç–∫–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 2).

var x = 0
var sum = 0
while x <= 10 {
    x += 1
    if x % 2 == 1 { //3+5=7=9
continue }
sum += x }
sum // 30

//: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µÔªø –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞Ôªø break

//–õ–∏—Å—Ç–∏–Ω–≥ 13.31
var lastNum = 54
var currentNum = 1
var sumOfInts = 0
while currentNum <= lastNum {
    sumOfInts += currentNum
    if sumOfInts > 450 {
        print("–•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ. –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ - \(currentNum)")
        break
}
    currentNum += 1
}

//: 13.5.Ôªø–û–ø–µ—Ä–∞—Ç–æ—Ä Ôªø–ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è Ôªøfor

//    –õ–∏—Å—Ç–∏–Ω–≥ 13.32
// –º–∞—Å—Å–∏–≤ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª
let numArray: Array<Int> = [1, 2, 3, 4, 5]
// –≤ –¥–∞–Ω–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è
// —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ numArray
var result0: Int = 0
// —Ü–∏–∫–ª –ø–æ–¥—Å—á–µ—Ç–∞ —Å—É–º–º—ã
for number in numArray {
    result0 += number
}
result0 //15

//–õ–∏—Å—Ç–∏–Ω–≥ 13.34
// –≤–Ω–µ—à–Ω—è—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
var myChar = "a"
// –≤–Ω–µ—à–Ω—è—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞
let myString = "Swift"
// —Ü–∏–∫–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Å –∏–º–µ–Ω–µ–º,
// —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
for myChar in myString {
    // –ª–æ–∫–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞
    // –≤–Ω–µ —Ü–∏–∫–ª–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
    let myString = "Char is"
    print("\(myString) \(myChar)")
}
myChar //"a"
myString //Swift

//–õ–∏—Å—Ç–∏–Ω–≥ 13.34–∞
// —Ä–∞–±–æ—Ç–∞ –±–µ–∑ –º–∞—Å—Å–∏–≤–∞
for _ in 1...3 {
    print("–ü–æ–≤—Ç–æ—Ä—è—é—â–∞—è—Å—è —Å—Ç—Ä–æ–∫–∞")
}


//–õ–∏—Å—Ç–∏–Ω–≥ 13.35
//—Ä–∞–±–æ—Ç–∞ —Å Dictionary
var countriesAndBlocks = ["–†–æ—Å—Å–∏—è": "–°–ù–ì", "–§—Ä–∞–Ω—Ü–∏—è":"–ï–°"]
for (countryName, orgName) in countriesAndBlocks {
    print("\(countryName) –≤—Å—Ç—É–ø–∏–ª–∞ –≤ \(orgName)")
}

//–õ–∏—Å—Ç–∏–Ω–≥ 13.36
// —Ä–∞–±–æ—Ç–∞ —Å keys & value
var anotherCountriesAndBlocks = ["–†–æ—Å—Å–∏—è": "–°–ù–ì", "–§—Ä–∞–Ω—Ü–∏—è":"–ï–°"]
for (countryName, _) in anotherCountriesAndBlocks {
    print("—Å—Ç—Ä–∞–Ω–∞ ‚Äî \(countryName)")
}
for (_, orgName) in countriesAndBlocks{
    print("–æ—Ä–∞–≥–∞–Ω–∏–∑–∞—Ü–∏—è ‚Äî \( orgName)")
}

//–õ–∏—Å—Ç–∏–Ω–≥ 13.38
//–ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏ –∏–Ω–¥–µ–∫—Å, —Ç–æ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–µ—Ç–æ–¥–æ–º enumerated(),
//–≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ—Ä—Ç–µ–∂–µ–π,
//–≥–¥–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç ‚Äî –∏–Ω–¥–µ–∫—Å, –∞ –≤—Ç–æ—Ä–æ–π ‚Äî –∑–Ω–∞—á–µ–Ω–∏–µ.
print("–ù–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–∫—Ç–æ–≤ –æ–±–æ –º–Ω–µ:")
var myMusicStyles = ["Rock", "Jazz", "Pop"]
for (index, musicName) in myMusicStyles.enumerated() {
    print("\(index+1). –Ø –ª—é–±–ª—é \(musicName)")
}

//–õ–∏—Å—Ç–∏–Ω–≥ 13.40
// –∫–æ–ª–ª–µ–∫—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ç 1 –¥–æ 10 —Å —à–∞–≥–æ–º 3
//–§—É–Ω–∫—Ü–∏—è stride(from:through:by:) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
//—á–∏—Å–ª–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –Ω–∞—á–∏–Ω–∞—è —Å from –¥–æ through —Å —à–∞–≥–æ–º by.
for i in stride( from: 1, through: 10, by: 3 ) {
        print("\(i)")
    }

//–õ–∏—Å—Ç–∏–Ω–≥ 13.42
//–≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—É–º–º—ã –≤—Å–µ—Ö –Ω–µ—á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 1000 —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ stride(from:through:by:).
var anyResult = 0
for i in stride( from:1, to: 1000, by:2 ) {
anyResult += i
    }
anyResult
//–§—É–Ω–∫—Ü–∏—è stride(from:to:by:) –∏–º–µ–µ—Ç –ª–∏—à—å –æ–¥–Ω–æ –æ—Ç–ª–∏—á–∏–µ ‚Äî –≤–º–µ—Å—Ç–æ –≤—Ö–æ–¥–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ through –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è to, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–∫–ª—é—á–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤ –Ω–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
//–§—É–Ω–∫—Ü–∏–∏ stride(from: through/to:by:)Ôªø –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—ÖÔªø StrideTo<T> –∏Ôªø StrideThrough<T>.


//–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µÔªø whereÔªø –≤Ôªø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏Ôªø for-in


//–õ–∏—Å—Ç–∏–Ω–≥ 13.43
var result1 = 0
for i in 1...10 where i % 2 == 0 {
result1 += i }
result1

//–õ–∏—Å—Ç–∏–Ω–≥ 13.44
//–≤ if —ç–∫–æ–Ω–æ–º–∏—Ç—Å—è –ø–∞–º—è—Ç—å, —Ç.–∫. –≤ for –ø—Ä–æ—Ö–æ–¥–∏—Ç 10 –∏—Ç–µ—Ä–∞—Ü–∏–π.

//var isRun = true

//// –≤–∞—Ä–∏–∞–Ω—Ç 1
//if isRun {
//    for i in 1...10 {
//        // —Ç–µ–ª–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
//} }

//// –≤–∞—Ä–∏–∞–Ω—Ç 2
//for i in 1...10 where isRun {
//    // —Ç–µ–ª–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
//}


//–ú–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–µ Ôªø–∫–æ–ª–ª–µ–∫—Ü–∏–∏Ôªø –≤ Ôªø–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ Ôªøfor-in


//–õ–∏—Å—Ç–∏–Ω–≥ 13.45
// —Å–ª–æ–≤–∞—Ä—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏–≥—Ä
var resultsOfGames = ["Red Wings":["2:1","2:3"], "Capitals":["3:6","5:5"],"Penguins":["3:3","1:2"]]
type(of: resultsOfGames)
// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª–æ–≤–∞—Ä—è
for (teamName, results) in resultsOfGames {
    // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä
    for oneResult in results {
        print("–ò–≥—Ä–∞ —Å \(teamName)  ‚Äî \(oneResult)")
    }
}
                                                             

//–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µÔªø continueÔªø –≤Ôªø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏Ôªø for-in


//–õ–∏—Å—Ç–∏–Ω–≥ 13.46
for i in 1...10 {
    if i % 2 == 0 {
     continue
    } else {
print(i) }
}


//–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µÔªø breakÔªø –≤Ôªø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏Ôªø for-in


//–õ–∏—Å—Ç–∏–Ω–≥ 13.47
import Foundation
for i in 1... {
    let randNum = Int(arc4random_uniform(100))
    if randNum == 5 {
        print("–ò—Ç–µ—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä \(i)")
break }
}


//–õ–∏—Å—Ç–∏–Ω–≥ 13.48
//–ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–∫–∏ –¥–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ —Ü–∏–∫–ª–∞ –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ.
mainLoop: for i in 1...5 {
    for y in i...5 {
        if y == 4 && i == 2{
            break mainLoop
}
        print("\(i) ‚Äî \(y)")
    }
}


//:  14. –û–ø—Ü–∏–æ–Ω–∞–ª—ã
// –õ–∏—Å—Ç–∏–Ω–≥ 14.1
//–û–Ω –º–æ–∂–µ—Ç –Ω–µ –ø–æ–Ω—è—Ç—å —á—Ç–æ —Ç—ã –æ—Ç –Ω–µ–≥–æ –ø—Ä–æ—Å–∏—à—å –∏ –≤—ã–¥–∞—Ç—å "nil".
let possibleString = "1945"
let convertPossibleString = Int(possibleString)
let unpossibleString = "–û–¥–Ω–∞ —Ç—ã—Å—è—á–∞ —Å—Ç–æ –¥–µ—Å—è—Ç—å"
let convertUnpossibleString = Int(unpossibleString)
type(of: convertPossibleString)
type(of: convertUnpossibleString)

//–õ–∏—Å—Ç–∏–Ω–≥ 14.3
//—Ç–∞–∫ —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.
var optionalChar: Optional<Character> = "a"
//—Ç–∞–∫ –Ω–µ —è–≤–Ω–æ, <T>?
var xCoordinate: Int? = 12
//–°–≤–∏—Ñ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç nil –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è
var someOptional: Bool?

//–õ–∏—Å—Ç–∏–Ω–≥ 14.7
//—Ç–∞–∫ –∂–µ, –ø–æ–º–∏–º–æ –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤, –∏–º–µ–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è Optional(_:)
// –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
var optionalVar = Optional ("stringValue")
optionalVar
// —É–Ω–∏—á—Ç–æ–∂–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
optionalVar = nil
type(of: optionalVar)


//O–ø—Ü–∏–æ–Ω–∞–ª—ãÔªø –≤Ôªø –∫–æ—Ä—Ç–µ–∂–∞—Ö


//–õ–∏—Å—Ç–∏–Ω–≥ 14.8
var tuple: (code: Int, message: String)? = nil
tuple = (404, "Page not found")

//–õ–∏—Å—Ç–∏–Ω–≥ 14.9
//–º–æ–∂–Ω–æ —é–∑–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ç—é–ø–ª–∞
var tupleWithoptelements: (Int?, Int) = (nil, 100)
tupleWithoptelements.0
tupleWithoptelements.1


//14.2.Ôªø –ò–∑–≤–ª–µ—á–µ–Ω–∏–µÔªø –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æÔªø –∑–Ω–∞—á–µ–Ω–∏—è


//–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ (force unwrapping)

//–õ–∏—Å—Ç–∏–Ω–≥ 14.11
//–ß–µ—Ä–µ–∑ –∑–Ω–∞–∫ "!"
var optVar: Int? = 12
var intVar = 34
var res = optVar! + 34
type(of: optVar!)

//–õ–∏—Å—Ç–∏–Ω–≥ 14.12
//—Ç–æ–∂–µ —Å–∞–º–æ–µ –∏ —Å –¥—Ä—É–≥–∏–º–∏ —Ç–∏–ø–∞–º–∏.
var optString: String? = "Srenya Zhizhkin"
var unwrapperString = optString!
print( "My name is \(unwrapperString)" )

//–ö–æ—Å–≤–µ–Ω–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (implicitly unwrapping)

//–õ–∏—Å—Ç–∏–Ω–≥ 14.13
//–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –æ–ø—Ü–∏–æ–Ω–∞–ª–µ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –æ—à–∏–±–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
/* –Æ–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏, —á—Ç–æ –≤ –¥–∞–Ω–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –í–°–ï–ì–î–ê–°–£–ö–ê –±—É–¥–µ—Ç
—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–µ nil) */
var wrapInt: Double! = 3.14
// —Å–ª–æ–∂–µ–Ω–∏–µ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –±–∞–∑–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–æ–∫
// –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ
wrapInt + 0.12
type(of: wrapInt)


//14.3.Ôªø–ü—Ä–æ–≤–µ—Ä–∫–∞Ôªø –Ω–∞–ª–∏—á–∏—èÔªø –∑–Ω–∞—á–µ–Ω–∏—èÔªø –≤Ôªø –æ–ø—Ü–∏–æ–Ω–∞–ª–µ


//–õ–∏—Å—Ç–∏–Ω–≥ 14.14
//–Æ–∑–∞–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –ø–æ—Ö–æ–¥—É –º–æ–∂–Ω–æ –ª—é–±–æ–π.
var optOne: UInt? = nil
var optTwo: UInt? = 32
optOne == nil
optTwo != nil

//–õ–∏—Å—Ç–∏–Ω–≥ 14.15
//–æ–ø–µ—Ä–µ–¥–µ–ª–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—è—Ç–µ—Ä–æ–∫
var fiveMarkCount: Int? = 8
var allCakesCount = 0;
// –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–ª–∏—á–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
if fiveMarkCount != nil {
    // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏—Ä–æ–∂–Ω—ã—Ö –∑–∞ –∫–∞–∂–¥—É—é –ø—è—Ç–µ—Ä–∫—É
    let  cakeForEachFiveMark = 2
    // –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏—Ä–æ–∂–Ω—ã—Ö
        allCakesCount = cakeForEachFiveMark * fiveMarkCount!
}
allCakesCount


// 14.4 –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µÔªø —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ (optional binding)


//–õ–∏—Å—Ç–∏–Ω–≥ 14.16
//–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è marks –ª–æ–∫–∞–ª—å–Ω–∞, —é–∑–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–ª–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ if
//–µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ nil, —Ç–æ —Ç–µ–ª–æ if –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è
var markCount: Int? = 8
// –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–ª–∏—á–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
if let marks = markCount {
    print("–í—Å–µ–≥–æ \(marks) –æ—Ü–µ–Ω–æ–∫")
}

//–õ–∏—Å—Ç–∏–Ω–≥ 14.17
//–≤–º–µ—Å—Ç–æ "x" –∏ "y" –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç–æ–µ –∏–º—è "_".
var pointX: Int? = 10
var pointY: Int? = 3
if let _ = pointX, let _ = pointY {
   print("–¢–æ—á–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏")
}

//–õ–∏—Å—Ç–∏–Ω–≥ 14.19
if let x = pointX, x > 5 {
    print("–¢–æ—á–∫–∞ –æ—á–µ–Ω—å –¥–∞–ª–µ–∫–æ –æ—Ç –≤–∞—Å ")
}

// –¢—É—Ç —è –ø–µ—Ä–µ—à—ë–ª –Ω–∞ 6-–µ –∏–∑–¥–∞–Ω–∏–µ –í–∞—Å–∏ –£—Å–æ–≤–∞, —Ç–∞–∫ —á—Ç–æ –≤—Å—è –Ω—É–º–µ—Ä–∞—Ü–∏—è —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –º—è–≥–∫–æ –≥–æ–≤–æ—Ä—è —Å–±–∏–ª–∞—Å—å :)


// 11.5 –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–≤—è–∑–∏–≤–∞–Ω–∏–µ –∫–∞–∫ —á–∞—Å—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–æ–¥–∞


//–õ–∏—Å—Ç–∏–Ω–≥ 11.22
//–ó–¥–µ—Å—å –º—ã —é–∑–∞–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ (optional binding) —Å–æ–∑–¥–∞–≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É coins –≤ —Ç–µ–ª–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ if, —Ç.–∫. –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –æ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–∏—Ç—Å—è.
let coinsInNewChest = "140"
var allCoinsCount = 1301
/* –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è */
 if let coins = Int(coinsInNewChest) {
    allCoinsCount += coins
} else {
    print("–£ –Ω–æ–≤–æ–≥–æ –¥—Ä–∞–∫–æ–Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–æ–ª–æ—Ç–æ")
}


//11.6. –û–ø–µ—Ä–∞—Ç–æ—Ä –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Å nil (nil coalescing).


//–õ–∏—Å—Ç–∏–Ω–≥ 11.23
//?? - —ç—Ç–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Å nil.
//–µ—Å–ª–∏ –±—ã –≤ optionalInt –±—ã–ª nil, —Ç–æ –ø–µ—Ä–µ–¥–∞–ª—Å—è –±—ã 0. –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –Ω—ë–º –µ—Å—Ç—å - —Ç–æ –æ–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è (–±–æ–ª—å—à–µ –Ω–µ –æ–ø—Ü–∏–æ–Ω–∞–ª).
let optionalInt: Int? = 20
var mustHaveResult = optionalInt ?? 0 // 20
type(of: mustHaveResult)

//–≠—Ç–æ—Ç –ª–∏—Å—Ç–∏–Ω–≥ –∞–Ω–∞–ª–æ–≥–∏—á–µ–Ω —Å–ª–µ–¥—É—é—â–µ–º—É:

//–õ–∏—Å—Ç–∏–Ω–≥ 11.24
//let optionalInt: Int? = 20
//var mustHaveResult: Int = 0
//if let unwrapped = optionalInt {
//    mustHaveResult = unwrapped
//} else {
//    mustHaveResult = 0
//}
let possibleNumber = "1701"
let convertedNumber = Int(possibleNumber)
type(of: convertedNumber)


//: 12.Functions
// –í—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –≤–Ω–µ—à–Ω–∏–µ –∏–º–µ–Ω–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.

//–õ–∏—Å—Ç–∏–Ω–≥ 12.2
//–£–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–±–∞ –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ–Ω—Ç—Ä–∞, –∏–Ω–∞—á–µ –æ—à–∏–±–∫–∞.
//–û–ø–µ—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å return –æ–ø—É—â–µ–Ω, —Ç.–∫. —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.
//–ï—Å–ª–∏ –≤–Ω–µ—à–Ω–∏–µ –∏–º–µ–Ω–∞ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–∏–º–≤–æ–ª _ , —Ç–æ –ø—Ä–∏ –≤—ã–∑–æ–≤–∏ –æ–Ω–∏ –Ω–µ –Ω—É–∂–Ω—ã.
//–û–ø–µ—Ä–∞—Ç–æ—Ä return –≤–æ–∑—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —é–∑–∞–µ—Ç—Å—è –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä.
func sumTwoInt(_ a: Int, _ b: Int) -> Int {
    let result = a + b
    print("–í–æ–∑—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ \(result)")
    return result
}
var resultFunc = sumTwoInt(10, 12)


//–ò–∑–º–µ–Ω—è–µ–º—ã–µ –∫–æ–ø–∏–∏ –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Ö.–ø.
//–£–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏.
//–õ–∏—Å—Ç–∏–Ω–≥ 12.6
func returnMessage(code: Int, message: String = "–ö–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è - ") -> String {
    var mutableMessage = message
    mutableMessage += String(code)
    return mutableMessage
}
let myMessage = returnMessage(code: 200)


//–°–∫–≤–æ–∑–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.

//–õ–∏—Å—Ç–∏–Ω–≥ 12.7
func changeValues(_ a: inout Int, _ b: inout Int) -> Void {
    let tmp = a
a = b
b = tmp }
var x2 = 150, y2 = 45
changeValues(&x, &y)
x // 45
y // 150


//–§—É–Ω–∫—Ü–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—Ö–æ–¥–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ–Ω—Ç—Ä–∞

//–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è
type(of: returnMessage(code: 400, message: "–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ö–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è  - "))
print( returnMessage(code: 400, message: "–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ö–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è  - ") )



//–í—Ö–æ–¥–Ω–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º –∑–Ω–∞—á–µ–Ω–∏–π.

//–õ–∏—Å—Ç–∏–Ω–≥ 12.9
//–£ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, –æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∫–æ–Ω—Ü–µ —Å–ø–∏—Å–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
func printRequestString(codes: Int...) -> Void {
    var codesString = ""
    for oneCode in codes {
        codesString += String(oneCode) + " "
    }
    print ("–ü–æ–ª—É—á–µ–Ω—ã –æ—Ç–≤–µ—Ç—ã - \(codesString)")
}
printRequestString(codes: 600, 800, 301)
printRequestString(codes: 101, 200)

//–ö–æ—Ä—Ç–µ–∂ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è

//–õ–∏—Å—Ç–∏–Ω–≥ 12.10
func getCodeDescription(code: Int) -> (code: Int, description: String) {
    let description: String
    switch code {
    case 1...100:
        description = "Error"
    case 101...200:
        description = "Correct"
    default:
        description = "Unknown"
    }
    return (code, description)
}
let request = getCodeDescription(code: 45)
request.description


// 12.3.–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–∏–ø
//—á–∏—Ç–∞–π –∫–Ω–∏–≥—É

//12.4.–§—É–Ω–∫—Ü–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—Ö–æ–¥–Ω–æ–≥–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–π

//–õ–∏—Å—Ç–∏–Ω–≥ 12.15
// —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å
func printText() {
    print("–§—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞")
}
// —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é
func returnPrintTextFunction() -> () -> Void {
    return printText
}
print("—à–∞–≥ 1")
let newFunctionInLet = returnPrintTextFunction()
print("—à–∞–≥ 2")
newFunctionInLet()
print("—à–∞–≥ 3")


//–í—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–∏–ø–∞

//–õ–∏—Å—Ç–∏–Ω–≥ 12.16
// —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –±–∞–Ω–∫–Ω–æ—Ç
func generateWallet(walletLength: Int) -> [Int] {
 // —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∏–ø—ã –±–∞–Ω–∫–Ω–æ—Ç
    let typesOfBanknotes = [50, 100, 500, 1000, 5000]
        // –º–∞—Å—Å–∏–≤ –±–∞–Ω–∫–Ω–æ—Ç
        var wallet: [Int] = []
        // —Ü–∏–∫–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∞—Å—Å–∏–≤–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö –±–∞–Ω–∫–Ω–æ—Ç
        for _ in 1...walletLength {
            wallet.append( typesOfBanknotes.randomElement()! )
        }
        return wallet
    }
    // —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å—á–µ—Ç–∞ –¥–µ–Ω–µ–≥ –≤ –∫–æ—à–µ–ª—å–∫–µ
    func sumWallet(banknotesFunction wallet: (Int) -> [Int], walletLength: Int) -> Int? {
        // –≤—ã–∑–æ–≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        let myWalletArray = wallet(walletLength)
        var sum: Int = 0
        for oneBanknote in myWalletArray {
            sum += oneBanknote
        }
    return sum }
    // –ø–µ—Ä–µ–¥–∞—á–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é
    sumWallet(banknotesFunction: generateWallet, walletLength: 20)


//12.5. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–π

//–õ–∏—Å—Ç–∏–Ω–≥ 12.17
func oneStep(
    coordinates: inout (Int, Int),
    stepType: String
) -> Void {
    func up( coords: inout (Int, Int)) {
        coords = (coords.0+1, coords.1)
    }
    func right( coords: inout (Int, Int)) {
        coords = (coords.0, coords.1+1)
    }
    func down( coords: inout (Int, Int)) {
        coords = (coords.0-1, coords.1)
    }
    func left( coords: inout (Int, Int)) {
        coords = (coords.0, coords.1-1)
    }
    switch stepType {
    case "up":
        up(coords: &coordinates)
    case "right":
        right(coords: &coordinates)
    case "down":
        down(coords: &coordinates)
    case "left":
        left(coords: &coordinates)
    default:
    break }
    }
    var coordinates = (10, -5)
    oneStep(coordinates: &coordinates, stepType: "up")
    oneStep(coordinates: &coordinates, stepType: "right")
    coordinates


//–ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π

//–ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ–¥–Ω–æ–∏–º–µ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏, –Ω–æ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
//–≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–ª–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–µ –±–µ–∑ —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è —Ç–∏–ø–∞ –æ–±—ä—è–≤–ª—è–µ–º–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
//–õ–∏—Å—Ç–∏–Ω–≥ 12.19
func cry() -> String {
    return "one"
}
func cry() -> Int {
return 1 }

//–õ–∏—Å—Ç–∏–Ω–≥ 12.21
let resultString: String = cry() // "one"
let resultInt = cry() + 100 // 101


//–†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π

//–§—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —Å–∞–º—É —Å–µ–±—è(—Ä–µ–∫—É—Ä—Å–∏—è)
//–õ–∏—Å—Ç–∏–Ω–≥ 12.22
func countdown(firstNum num: Int) -> Void {
    print(num)
    if num > 0 {
        // —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
        countdown(firstNum:num-1)
    }
}
countdown(firstNum: 20)


//:13.–ó–∞–º—ã–∫–∞–Ω–∏—è (closure)
//–õ–∏—Å—Ç–∏–Ω–≥ 13.1
// –º–∞—Å—Å–∏–≤ —Å –∫—É–ø—é—Ä–∞–º–∏
var wallet = [10,50,100,100,5000,100,50,50,500,100]
// —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–±–æ—Ä–∞ –∫—É–ø—é—Ä
func handle100(wallet: [Int]) -> [Int] {
    var returnWallet = [Int]()
    for banknote in wallet {
        if banknote == 100 {
            returnWallet.append(banknote)
        }
}
    return returnWallet
}
// –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–±–æ—Ä–∞ –∫—É–ø—é—Ä —Å –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ–º 100
handle100(wallet: wallet)
